// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  
}

model User {
  id        Int    @id @default(autoincrement())
  firstName String @db.VarChar(280)
  lastName  String @db.VarChar(280)
  password  String
  email     String @unique @db.VarChar(280)

  role   Role @relation(fields: [roleId], references: [id])
  roleId Int
}

model Role {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(255)
  user        User[]
  apisOnRoles ApisOnRoles[]
}

model Api {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  apisOnRoles ApisOnRoles[]
}

model Action {
  id     Int      @id @default(autoincrement())
  method String
  url    String
  date   DateTime

  userEmail String
}

model ApisOnRoles {
  api   Api @relation(fields: [apiId], references: [id])
  apiId Int

  role   Role @relation(fields: [roleId], references: [id])
  roleId Int

  get    Boolean @default(false)
  post   Boolean @default(false)
  delete Boolean @default(false)

  @@id([apiId, roleId])
}

model Config {
  key   String @id
  value String
}


// Define el enumerado TypeService
enum TypeService {
  Comida
  Musica
  Baile
  Decoracion
  Otro
}

// Define la tabla Servicio
model Service {
  id            Int      @id @default(autoincrement())
  nameService   String   @db.VarChar(50)
  typeService   TypeService
  nameSupplier  String   @db.VarChar(50)
  company       String   @db.VarChar(50)
  phoneNumber   String   @db.VarChar(200)
  description   String
  price         Float?
  inventory     Inventory[] // add this line
}

enum TypeSalon {
  interior
  exterior
}

// Define el enumerado TypeEvent
enum TypeEvent {
  boda
  quinceanera
  cumpleanos
  graduacion
  otro
}

// Define la tabla Reservacion
model Reservacion {
  id                 Int                @id @default(autoincrement())
  idUser             Int
  nameClient         String             @db.VarChar(200)
  salon              TypeSalon
  cantidadAdultos    Int
  cantidadNinos      Int
  fecha              String
  fechaFin           String
  horaInicio         DateTime
  horaFin            DateTime
  tipoEvento         TypeEvent
  downPayment        Float
  priceRoomPerHour   Float
  inventario         Inventory?
  state              Boolean @default(true)
}


model Inventory {
  id           Int       @id @default(autoincrement())
  reservacion    Reservacion  @relation(fields: [reservacionId], references: [id])
  reservacionId       Int @unique
  servicios     Service[] 
}